/************************TRICK HEADER*************************
PURPOSE:
    (This S_define works with the RUN_analytic input file)
LIBRARY DEPENDENCIES:
    (

    )
*************************************************************/

#include "sim_objects/default_trick_sys.sm"
##include "hello.h"
##include "dcmbus.h"
##include "misc_utils.h"
##include <libgen.h>

class SDTSimObject : public Trick::SimObject {

    public:
        struct dcmbus_ctrlblk_t dcmbus_obj;
        double int_step = 0.05;
        uint64_t seq_num = 0;
        void get_exe_path(void) {
            char path[500] = {0};
            int dest_len = 500;
            if (readlink ("/proc/self/exe", path, dest_len) != -1)
            {
                dirname(path);
                strcat(path, "/");
                printf("path=%s\n", path);
            }
        };

        void heart_beat(void) {
            char currentTime[84] = "";
            timestamp(currentTime);
            fprintf(stderr, "[%s] Client sim_time = %f\n", currentTime, exec_get_sim_time());
        };

        void client_enqueue(void) {
            uint64_t say_hi = seq_num;
            //  dcmbus_tx_direct(&dcmbus_obj, "fsw-egse", &say_hi, 8);
            dcmbus_ring_enqueue(&dcmbus_obj, "fsw_actuators", &say_hi, sizeof(say_hi));
        };

        void client_rx_process(void) {
            char currentTime[84] = "";
            uint64_t data = 0;
            int size;
            timestamp(currentTime);
            size = dcmbus_ring_dequeue(&dcmbus_obj, "fsw_ins", &data, sizeof(data));
            if(size == sizeof(data)) {
                fprintf(stdout, "[%s] Client: Received %lu prev_seq %lu\n", currentTime, data, seq_num);
                seq_num = data;
                return;
            }
        }

        SDTSimObject()
        {
        	/* [C<#>] [{job_tag}] [P<#>] ([<cycle_time>, [<start_time>, [<stop_time>,]]] <job_class>) <module>([args]) ; */
            ("initialization") dcmbus_ctrlblk_init (&dcmbus_obj, "dcm_client_ring.cfg", "dcm_client_channel.cfg", "dcm_client_bind.cfg", 0);
            P1 (1, "scheduled") dcmbus_channel_rx_job(&dcmbus_obj, "fsw-egse", 8);
            P1 (1, "scheduled") client_rx_process(); 
            P2 (1, "scheduled") client_enqueue();
            P2 (1, "scheduled") dcmbus_channel_tx_job(&dcmbus_obj, "fsw-egse");
            ("shutdown") dcmbus_ctrlblk_deinit(&dcmbus_obj);
        }
} ;

SDTSimObject dyn ;